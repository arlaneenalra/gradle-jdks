apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'com.palantir.external-publish-jar'
apply plugin: 'com.palantir.external-publish-gradle-plugin'

dependencies {
    api project(':gradle-jdks-distributions')

    implementation 'com.palantir.baseline:gradle-baseline-java'

    compileOnly 'org.immutables:value::annotations'
    annotationProcessor 'org.immutables:value'

    testImplementation 'com.netflix.nebula:nebula-test'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
}

gradlePlugin {
    plugins {
        jdks {
            id = 'com.palantir.jdks'
            displayName = 'Palantir JDK Auto-provisioning Plugin'
            description = 'Auto-provisions specific versions of JDKs'
            implementationClass = 'com.palantir.gradle.jdks.JdksPlugin'
        }

        palantirCaLenient {
            id = 'com.palantir.jdks.palantir-ca.lenient'
            displayName = 'Palantir JDK CA Auto-provisioning Plugin Lenient'
            description = 'Auto-provisions Palantir CA for JDKs that will not fail if the certificate can\'t be found'
            implementationClass = 'com.palantir.gradle.jdks.PalantirCaPluginLenient'
        }

        palantirCaStrict {
            id = 'com.palantir.jdks.palantir-ca.strict'
            displayName = 'Palantir JDK CA Auto-provisioning Plugin Strict'
            description = 'Auto-provisions Palantir CA for JDKs that will fail if the certificate can\'t be found'
            implementationClass = 'com.palantir.gradle.jdks.PalantirCaPluginStrict'
        }
    }
}

pluginBundle {
    website = 'https://github.com/palantir/gradle-jdks'
    vcsUrl = 'https://github.com/palantir/gradle-jdks'
    description = 'Download specific JDKs versions automatically'
    tags = ['java', 'jdks']
}

tasks.withType(JavaCompile).configureEach {
    it.options.errorprone.disable 'JavaxInjectOnAbstractMethod'
}
